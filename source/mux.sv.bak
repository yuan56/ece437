module mux(
  input wire [4:0] Rsel,
  input wire [31:0] Reg00,
  input wire [31:0] Reg01,
  input wire [31:0] Reg02,
  input wire [31:0] Reg03,
  input wire [31:0] Reg04,
  input wire [31:0] Reg05,
  input wire [31:0] Reg06,
  input wire [31:0] Reg07,
  input wire [31:0] Reg08,
  input wire [31:0] Reg09,
  input wire [31:0] Reg10,
  input wire [31:0] Reg11,
  input wire [31:0] Reg12,
  input wire [31:0] Reg13,
  input wire [31:0] Reg14,
  input wire [31:0] Reg15,
  input wire [31:0] Reg16,
  input wire [31:0] Reg17,
  input wire [31:0] Reg18,
  input wire [31:0] Reg19,
  input wire [31:0] Reg20,
  input wire [31:0] Reg21,
  input wire [31:0] Reg22,
  input wire [31:0] Reg23,
  input wire [31:0] Reg24,
  input wire [31:0] Reg25,
  input wire [31:0] Reg26,
  input wire [31:0] Reg27,
  input wire [31:0] Reg28,
  input wire [31:0] Reg29,
  input wire [31:0] Reg30,
  input wire [31:0] Reg31,
  output reg [31:0] Rdat
  );
  
//assign Rdat = ()


//always begin
always @(Rsel or Reg00 or Reg01 or Reg02 or Reg03 or Reg04 or Reg05 or Reg06 or Reg07 or Reg08 or Reg09 or Reg10 or Reg11 or Reg12 or Reg13 or Reg14 or Reg15 or Reg16 or Reg17 or Reg18 or Reg19 or Reg20 or Reg21 or Reg22 or Reg23 or Reg24 or Reg25 or Reg26 or Reg27 or Reg28 or Reg29 or Reg30 or Reg31) begin
if (Rsel == 5'b00000) begin
  Rdat <= Reg00;
end

else if (Rsel == 5'b00001) begin
  Rdat = Reg01;
end

else if (Rsel == 5'b00010) begin
  Rdat = Reg02;
end

else if (Rsel == 5'b00011) begin
  Rdat = Reg03;
end

else if (Rsel == 5'b00100) begin
  Rdat = Reg04;
end

else if (Rsel == 5'b00101) begin
  Rdat = Reg05;
end

else if (Rsel == 5'b00110) begin
  Rdat = Reg06;
end

else if (Rsel == 5'b00111) begin
  Rdat = Reg07;
end

else if (Rsel == 5'b01000) begin
  Rdat = Reg08;
end

else if (Rsel == 5'b01001) begin
  Rdat = Reg09;
end

else if (Rsel == 5'b01010) begin
  Rdat = Reg10;
end

else if (Rsel == 5'b01011) begin
  Rdat = Reg11;
end

else if (Rsel == 5'b01100) begin
  Rdat = Reg12;
end

else if (Rsel == 5'b01101) begin
  Rdat = Reg13;
end

else if (Rsel == 5'b01110) begin
  Rdat = Reg14;
end

else if (Rsel == 5'b01111) begin
  Rdat = Reg15;
end

else if (Rsel == 5'b10000) begin
  Rdat = Reg16;
end

else if (Rsel == 5'b10001) begin
  Rdat = Reg17;
end

else if (Rsel == 5'b10010) begin
  Rdat = Reg18;
end

else if (Rsel == 5'b10011) begin
  Rdat = Reg19;
end

else if (Rsel == 5'b10100) begin
  Rdat = Reg20;
end
else if (Rsel == 5'b10101) begin
  Rdat = Reg21;
end

else if (Rsel == 5'b10110) begin
  Rdat = Reg22;
end

else if (Rsel == 5'b10111) begin
  Rdat = Reg23;
end

else if (Rsel == 5'b11000) begin
  Rdat = Reg24;
end
else if (Rsel == 5'b11001) begin
  Rdat = Reg25;
end

else if (Rsel == 5'b11010) begin
  Rdat = Reg26;
end

else if (Rsel == 5'b11011) begin
  Rdat = Reg27;
end

else if (Rsel == 5'b11100) begin
  Rdat = Reg28;
end
else if (Rsel == 5'b11101) begin
  Rdat = Reg29;
end

else if (Rsel == 5'b11110) begin
  Rdat = Reg30;
end

else if (Rsel == 5'b11111) begin
  Rdat <= Reg31;
end
  
end



endmodule